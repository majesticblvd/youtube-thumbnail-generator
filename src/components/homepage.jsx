'use client'

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/3AsujLGrggG
 */
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { DropdownMenuTrigger, DropdownMenuItem, DropdownMenuContent, DropdownMenu } from "@/components/ui/dropdown-menu"
import { useState, useEffect } from "react"
import { useFormState } from 'react-dom'
import { createThumbnail } from "@/app/actions"

const initialState = {
  message: null,
}

export function Homepage() {

  const [state, setState] = useState(initialState);
  const [file, setFile] = useState(null);
  const [text, setText] = useState(''); // State to hold text input
  const [imageUrl, setImageUrl] = useState('');

  const handleTextChange = (e) => {
    setText(e.target.value); // Update text state on change
  };

  // For when the image is selected
  const handleFileChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setFile(file);
      const reader = new FileReader();
      reader.onloadend = () => {
        const base64String = reader.result;
        console.log(base64String);
        setImageUrl(reader.result);
      };
      reader.readAsDataURL(file);
    }
  };

  async function handleSubmit(e) {
    e.preventDefault();
  
    // Prepare the data as a JSON object
    const data = { 
      text: text,
      file: imageUrl
    }; // Assuming 'text' is the state variable holding your text input

    console.log('file: ', file);
  
    fetch('/upload/api', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    })
    .then(response => response.json())
    .then(data => {
      console.log('Success:', data);
    })
    .catch((error) => {
      console.error('Error:', error);
    });
  }


  return (
    (<Card className="my-8">
      <form>
        <div className="grid gap-4 md:grid-cols-2">
          <div className="space-y-4">
            <CardHeader className="pb-0">
              <CardTitle>Thumbnail Generator</CardTitle>
              <CardDescription>Create stunning thumbnails for your posts.</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid gap-2">
                  <label className="text-sm font-medium" htmlFor="upload">
                    Upload Image
                  </label>
                  <input
                    type="file"
                    id="upload"
                    style={{ display: 'none' }}
                    accept="image/*" // Accept images only
                    onChange={handleFileChange} // Call the function to handle the file change
                  />
                  <div
                    className="border-2 border-dashed border-gray-200 rounded-lg p-4 flex items-center justify-center w-full h-[200px]"
                    onClick={() => document.getElementById('upload').click()} // Trigger file input click
                  >
                    <span className="text-gray-500 font-medium cursor-pointer">
                      Select an Image
                    </span>
                  </div>
                </div>
              <div className="grid gap-2">
                <label className="text-sm font-medium mt-4" htmlFor="text">
                  Add Text
                </label>
                <Input
                  className="w-full"
                  id="text"
                  placeholder="Enter text to include in the thumbnail" 
                  onChange={handleTextChange}
                  />
              </div>
              <div className="grid gap-2">
                <label className="text-sm font-medium mt-4">Brand</label>
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button className="!rounded-lg !text-left w-full" id="style" variant="outline">
                      Access Hollywood
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent>
                    <DropdownMenuItem>Access Hollywood</DropdownMenuItem>
                    <DropdownMenuItem>Karamo Show</DropdownMenuItem>
                    <DropdownMenuItem>Steve Wilkos</DropdownMenuItem>
                    <DropdownMenuItem>Maury Show</DropdownMenuItem>
                    <DropdownMenuItem>Jerry Springer TV</DropdownMenuItem>
                  </DropdownMenuContent>
                </DropdownMenu>
              </div>
              <div className="grid gap-2">
                <label className="text-sm font-medium mt-4">Segment</label>
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button className="!rounded-lg !text-left w-full" id="theme" variant="outline">
                      Access Generic
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent>
                    <DropdownMenuItem>Access Generic</DropdownMenuItem>
                    <DropdownMenuItem>Access Interview</DropdownMenuItem>
                    <DropdownMenuItem>Access Awards</DropdownMenuItem>
                  </DropdownMenuContent>
                </DropdownMenu>
              </div>
              <Button onClick={handleSubmit} className="w-full my-4">Generate Thumbnail</Button>
            </CardContent>
          </div>
          <div
            className="border border-gray-200 rounded-lg p-4 flex items-center justify-center">
            {imageUrl ? (
              <img
                alt="Uploaded Thumbnail"
                className="object-cover w-full h-48"
                src={imageUrl}
                style={{
                  aspectRatio: "400/200",
                  objectFit: "cover",
                }}
              />
            ) : (
              <img
                alt="Placeholder"
                className="object-cover w-full h-48"
                src="/placeholder.svg"
                style={{
                  aspectRatio: "400/200",
                  objectFit: "cover",
                }}
              />
            )}
          </div>
          <p aria-live="polite" className="sr-only">
            {state?.message}
          </p>
        </div>
      </form>
    </Card>)
  );
}


function UploadIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M21 15v4a2 2 0 1-2 2H5a2 1-2-2v-4" />
      <polyline points="17 8 12 3 7" />
      <line x1="12" x2="12" y1="3" y2="15" />
    </svg>)
  );
}
